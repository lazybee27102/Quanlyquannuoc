<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>